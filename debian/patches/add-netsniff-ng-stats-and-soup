Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-sostat (20120722-0ubuntu0securityonion4) precise; urgency=low
 .
   * add netsniff-ng stats and soup
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-sostat-20120722.orig/bin/sostat
+++ securityonion-sostat-20120722/bin/sostat
@@ -52,12 +52,14 @@ echo
 header "Network Sockets"
 lsof -nP -i
 
-echo
-header "IDS Rules Update"
-date=$(date +'%a %b %_d')
-tail -n 1000 /var/log/nsm/pulledpork.log |
-  sed "/^$date/,\$!d;/./!d;/An error occurred: WARNING: /d" |
-  remove_ansi_escapes
+if [ -f /var/log/nsm/pulledpork.log ]; then
+	echo
+	header "IDS Rules Update"
+	date=$(date +'%a %b %_d')
+	tail -n 1000 /var/log/nsm/pulledpork.log |
+	  sed "/^$date/,\$!d;/./!d;/An error occurred: WARNING: /d" |
+	  remove_ansi_escapes
+fi
 
 echo
 header "CPU Usage"
@@ -92,6 +94,15 @@ if [ -d /nsm/sensor_data ]; then
 	egrep -h "Appl. Name|Tot Packets|Tot Pkt Lost|Errors" /proc/net/pf_ring/*
 fi
 
+if ls /var/log/nsm/$HOSTNAME-*/netsniff-ng.log > /dev/null 2>&1; then
+        echo
+        header "Netsniff-NG - Reported Packet Loss (per interval)"
+ 	awk 'BEGIN { RS="."; FS="/"; ORS="\n" } { if( $0 !~ /netsniff/ && substr( $2,2,length($2)-2 ) > 0 ) print "File:",FILENAME,"Processed:",$1,"Lost:",$2 }' /var/log/nsm/$HOSTNAME-*/netsniff-ng.log | sed -e 's/(//' -e 's/)//' | column -t | grep -v "Lost:  -0"
+	if [ $? -gt 0 ]; then
+		echo "0 Loss"
+	fi
+fi
+
 if [ -d /var/lib/mysql/securityonion_db ]; then
 	echo
 	header "Sguil Uncategorized Events"
--- /dev/null
+++ securityonion-sostat-20120722/bin/soup
@@ -0,0 +1,79 @@
+#!/bin/bash
+
+#########################################
+# Variables
+#########################################
+
+# A banner for user output
+BANNER="###########################################################################"
+
+# Most updates don't require a reboot, but kernel updates do.
+# Also, if we install mysql-server updates, we have to stop all services,
+# so we might as well reboot to bring all services back up.
+REBOOT=no
+
+#########################################
+# Got r00t?
+#########################################
+if [[ $(/usr/bin/id -u) -ne 0 ]]; then
+    echo "This script needs to be run as root.  Please try again using sudo."
+    exit
+fi
+
+#########################################
+# UPDATE!
+#########################################
+
+# Prompt user to continue
+echo $BANNER
+echo "This script will automatically install all available updates."
+echo ""
+echo "If mysql-server updates are available, it will stop sensor processes"
+echo "to ensure a clean update."
+echo ""
+echo "At the end of the script, if mysql-server and/or kernel updates"
+echo "were installed, you will be prompted to reboot."
+echo $BANNER
+echo ""
+echo "Press Enter to continue or Ctrl-C to cancel."
+read input
+
+# Sync with mirrors
+apt-get update
+
+# if mysql-server updates are available, we need to stop services and force reboot at end
+if apt-get dist-upgrade --assume-no |grep mysql-server >/dev/null; then
+	echo $BANNER
+	echo -n "New mysql-server packages available. Stopping services for clean update."
+	service nsm stop > /dev/null 2>&1
+	echo -n "."
+	service syslog-ng stop > /dev/null 2>&1
+	echo -n "."
+	service apache2 stop > /dev/null 2>&1
+	echo -n "."
+	pkill autossh > /dev/null 2>&1
+	echo -n "."
+	pkill perl > /dev/null 2>&1
+	echo "done."
+	echo $BANNER
+	apt-get install -y mysql-server mysql-server-core-5.5 mysql-server-5.5
+	REBOOT=yes
+fi
+
+# Force pfring-module to install before any kernel updates
+apt-get install -y securityonion-pfring-module
+
+# If there is a kernel update available, we need to reboot at the end
+apt-get dist-upgrade --assume-no | grep linux-image >/dev/null && REBOOT=yes
+apt-get -y dist-upgrade
+
+# Final output
+echo $BANNER
+echo "All updates have been installed."
+
+# If we need to reboot, give the user a chance to cancel.
+if [ $REBOOT == "yes" ]; then
+	echo "Press Enter to reboot or Ctrl-C to cancel."
+	read input
+	reboot
+fi
