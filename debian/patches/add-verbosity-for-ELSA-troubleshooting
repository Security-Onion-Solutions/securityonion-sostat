Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-sostat (20120722-0ubuntu0securityonion15) precise; urgency=low
 .
   * add verbosity for ELSA troubleshooting
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-sostat-20120722.orig/bin/sostat
+++ securityonion-sostat-20120722/bin/sostat
@@ -169,3 +169,44 @@ if [ -d /var/lib/mysql/snorby ]; then
 	mysql -uroot -e "use snorby;  select count(*) as Totals, concat(signature.sig_gid, ':', signature.sig_sid) as 'GenID:SigID', signature.sig_name as SignatureName from event, signature where event.signature=signature.sig_id group by event.signature order by Totals desc limit 50;"
 	mysql -uroot -e "use snorby;  select count(*) as Total from event, signature where event.signature=signature.sig_id;"
 fi
+
+if [ -f /etc/nsm/securityonion.conf ] && source /etc/nsm/securityonion.conf && [ "$ELSA" = "YES" ]; then
+        echo
+        header "ELSA"
+        echo "MySQL"
+        echo "Checking for process:"
+        pgrep -lf mysql
+        echo "Checking for connection:"
+        [ -d /var/lib/mysql/securityonion_db ] && nc -vz localhost 3306 || nc -vz localhost 50000
+        echo
+        echo "Sphinx"
+        echo "Checking for process:"
+        pgrep -lf sphinx
+        echo "Checking for connection:"
+        nc -vz localhost 9306
+        echo
+        if [ -d /var/lib/mysql/securityonion_db ]; then
+                # Master server
+                echo "ELSA Log Node SSH Tunnels"
+                lsof -nP -i |grep "127.0.0.1:500.. (LISTEN)" | sed 's|127.0.0.1:||g' |sort -k9 | awk '{print $9,$3,$2}' | sort | while read PORT NAME PID; do
+                        IP=`lsof -nP -i |grep "^sshd" | awk '{print $2,$9}' |grep "^$PID" |grep ":22" |awk '{print $2}' |cut -d\> -f2 | cut -d\: -f1`
+                        echo $PORT $IP $NAME
+                done | column -t
+        else
+                # ELSA Log Node
+                echo "autossh"
+                echo "Checking for process:"
+                pgrep -lf autossh
+                echo
+                echo "Checking APIKEY:"
+                APIKEY=`grep '"apikey": "' /etc/elsa_web.conf | awk '{print $2}' | sed 's|"||g'`
+                source /root/.ssh/securityonion_ssh.conf
+                APIKEY_REMOTE=`ssh $SSH_USERNAME@$SERVERNAME -i /root/.ssh/securityonion grep -A2 $ELSA_PORT /etc/elsa_web.conf | grep apikey | awk '{print $2}' | sed 's|"||g'`
+                [ "$APIKEY" = "$APIKEY_REMOTE" ] && echo "APIKEY matches server." || echo "APIKEY not found on master server."
+                echo
+                echo "starman"
+                echo "Checking for processes:"
+                pgrep -lf starman
+        fi
+fi
+
