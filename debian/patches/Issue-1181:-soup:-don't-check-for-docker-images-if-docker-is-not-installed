Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-sostat (20120722-0ubuntu0securityonion83) trusty; urgency=medium
 .
   * Issue 1181: soup: don't check for docker images if docker is not installed
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-sostat-20120722.orig/bin/soup
+++ securityonion-sostat-20120722/bin/soup
@@ -180,7 +180,7 @@ if [ -f /etc/nsm/elasticdownload.conf ]
 	echo "Checking Security Onion Docker image status..."
 	. /usr/sbin/so-elastic-common
 	for i in so-curator so-domainstats so-elastalert so-elasticsearch so-freqserver so-kibana so-logstash; do
-		OUTPUT=`docker pull --disable-content-trust=false $DOCKERHUB/$i`
+		OUTPUT=`/usr/bin/docker pull --disable-content-trust=false $DOCKERHUB/$i`
 		#echo $OUTPUT
 		if echo $OUTPUT | grep -q "up to date"; then
 			echo "$i image is up to date."
@@ -261,16 +261,18 @@ if [ "$RESTART_CONTAINERS" == "yes" ]; t
 fi
 
 # Remove old Docker images
-if docker images | grep "${DOCKERHUB}/so-" | grep -v latest; then
-        echo
-        echo "Removing old Security Onion Docker images..."
-        echo
-        for i in $( docker images | grep "${DOCKERHUB}/so-" | grep -v latest | awk '{print $3}'); do
-                echo "Removing ${i} ..."
-                docker rmi ${i} -f
-        done
-        echo
-        echo "Old Security Onion Docker images have been removed."
+if [ -f /etc/nsm/elasticdownload.conf ] && [ -x /usr/bin/docker ] ; then
+	if /usr/bin/docker images | grep "${DOCKERHUB}/so-" | grep -v latest; then
+        	echo
+	        echo "Removing old Security Onion Docker images..."
+        	echo
+	        for i in $( /usr/bin/docker images | grep "${DOCKERHUB}/so-" | grep -v latest | awk '{print $3}'); do
+        	        echo "Removing ${i} ..."
+                	/usr/bin/docker rmi ${i} -f
+	        done
+        	echo
+	        echo "Old Security Onion Docker images have been removed."
+	fi
 fi
 
 # If sniffing interfaces, then output notifications about any sniffing process updates
